*transliterate.txt*   Transliterate text

Author: Fanael Linithien <fanael4@gmail.com>
License: 3-clause BSD license, see transliterate.vim for details
Version: 0.2.1

=======================================================================
Contents                       *transliterate* *transliterate-contents*

        1. Requirements .................. |transliterate-requirements|
        2. Installation .................. |transliterate-installation|
        3. Configuration ................. |transliterate-configuration|
        4. Usage ......................... |transliterate-usage|
        5. Known issues .................. |transliterate-issues|
        6. Todo .......................... |transliterate-todo|

=======================================================================
1. Requirements                            *transliterate-requirements*

There's only one requirement: Vim. The required version is a unknown
to me, it certainly works with Vim 7.3.

Reports about whether the plugin works with older Vim versions would
be appreciated.

=======================================================================
2. Installation                            *transliterate-installation*

To install:
  - Download the plugin archive.
  - Extract the archive into the runtime directory.
  - Generate the help tags (optional).

=======================================================================
3. Configuration                          *transliterate-configuration*

                                                  *g:transliterateMode*
g:transliterateMode~
Default: "identity"

The transliteration mode. Determines what will be replaced by what.
Currently supported modes are:
  * identity: does nothing
  * xsampa: transforms X-SAMPA into IPA
  * x-sampa: ditto
  * any user-defined modes, see |TransliterateAddMode()|
    and |TransliterateForceMode()|.

Example: >
        let g:transliterateMode = 'xsampa'
<
                                             *<Plug>TransliterateApply*
<Plug>TransliterateApply~

Normal- and visual mode |<Plug>| mapping that invokes the
transliteration procedure. To use it, map it to something more
accessible with |nmap| and/or |vmap| (no, |noremap| won't work).

Example: >
        nmap <F2> <Plug>TransliterateApply
        vmap <F2> <Plug>TransliterateApply
<

                                               *TransliterateAddMode()*
TransliterateAddMode({modeName}, {modeTable})

Add a custom transliteration mode {modeName}. {modeTable} should be
a list of two-element lists, where the first element is the string
to be searched for and the second element is the string to replace
the first one with.

If a mode {modeName} already exists, an error occurs.

Example: >
        call TransliterateAddMode('foo', [['X', 'y'], ['foo', 'bar']])
<

                                             *TransliterateForceMode()*
TransliterateForceMode({modeName}, {modeTable})

The same as |TransliterateAddMode()|, except it silently overwrites
the mode if a name clash occurs.

                                               *TransliterateHasMode()*
TransliterateHasMode({modeName})

1 if mode {modeName} exists, 0 otherwise.

                                            *TransliterateRemoveMode()*
TransliterateRemoveMode({modeName})

Remove the transliterate mode {modeName}. Nothing happens if there's
no such mode.

=======================================================================
4. Usage                                          *transliterate-usage*

To make the plugin transliterate some text, press the key you mapped
'<Plug>TransliterateApply' to in normal or visual mode.

In normal mode, the transliteration key accepts any |motion|, so for
example (assuming the transliteration key is <F2>) >
        <F2>iW
<will transliterate the inner WORD according to current mode
(see |g:transliterateMode|).

In visual mode, pressing transliteration key will transliterate
the selection.

In short: the transliteration key works like any other verb
in vim editing language.


To add a custom mode, use |TransliterateAddMode()| or
|TransliterateForceMode()|.

=======================================================================
5. Known issues                                  *transliterate-issues*

The plugin is slow. Really slow. It's written in pure vim script,
and vim script is hardly a speed demon. That said, it's fast enough
for typical usage, just don't try to transliterate a whole big file.

=======================================================================
6. Todo                                            *transliterate-todo*

 - Support for Cyrillic (very important)
 - And for kanas
 - And for pinyin
 - Reverse detransliteration

=======================================================================
vim: tw=72 sw=4 et ft=help
